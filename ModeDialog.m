function ModeDialog(pos,mode)
%Displays the rigth dialog function for the specific mode.
d = dialog('Position',pos,'Name','HandsOn-Algorithms');
switch mode
    case 1
        FreeRun(d)
    case 2
        Bubble1(d)
        Bubble2(d)
    case 3
        Insert1(d)
        Insert2(d)
    otherwise
end
close(d)
end
function FreeRun(d)
txt(1) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 150 600 500],...
    'FontSize',16,...
    'String','Free Run');
txt(2) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 0 600 600],...
    'FontSize',14,...
    'String',{'Select the springs that you would like to compare by moving the red and blue boxes using the handle.','',...
    'You should use the red box to select the spring on left and blue box to select the one on right.','',...
    'Compare their stiffness by pushing the handle against them.','',...
    'Swap if the one on right is more compliant to move smaller item to the left, keep otherwise.','',...
    'In other words, push the handle towards the softer spring in the decision phase.','',...
    'Release the handle for a short while as advised between the main phases: Spring selection, exploration and  decision.','',...
    'A "B" letter corresponding to bubble sort and an "I" letter corresponding to insertion sort will be visible in the bottom left corner as far as your comparisons match these algorithms.'
    });
btn = uicontrol('Parent',d,...
    'Position',[550 50 200 50],...
    'String','NEXT -->',...
    'FontSize',16,...
    'Callback',@btn_callback);
drawnow
selected=false;
while ~selected
    drawnow
    %disp(char(btn.String));
    if char(btn.String)=='S'
        selected=true;
    end
end
delete(btn)
delete(txt)
end
function Bubble1(d)
txt(1) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 150 600 500],...
    'FontSize',16,...
    'String','Guided Run: Bubble Sort');
txt(2) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 0 600 600],...
    'FontSize',14,...
    'String',{'Logic Behind:','',...
    'Compare adjacent items and swap if the smaller item is on right.','',...
    'Repeat this until you reach the end of the list.','',...
    'The biggest items will be pushed to the end since they will stay on the right after each comparison. ',...
    'Eliminate these items at the end of the list once you are sure that they are at their place.','',...
    'Start over from the beginning until you are sure that all the items are at their appropriate places.'});
btn = uicontrol('Parent',d,...
    'Position',[550 50 200 50],...
    'String','NEXT -->',...
    'FontSize',16,...
    'Callback',@btn_callback);
drawnow
selected=false;
while ~selected
    drawnow
    %disp(char(btn.String));
    if char(btn.String)=='S'
        selected=true;
    end
end
delete(btn)
delete(txt)
end
function Bubble2(d)
txt(1) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 150 600 500],...
    'FontSize',16,...
    'String','Guided Run: Bubble Sort');
txt(2) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 0 600 600],...
    'FontSize',14,...
    'String',{'Your Duty:','',...
    'Compare their stiffness by pushing the handle against them.','',...
    'Swap if the one on right is more compliant to move smaller item to the left, keep otherwise.','',...
    'In other words, push the handle towards the softer spring in the decision phase.','',...
    'Observe order of comparisons.'});
btn = uicontrol('Parent',d,...
    'Position',[550 50 200 50],...
    'String','NEXT -->',...
    'FontSize',16,...
    'Callback',@btn_callback);
drawnow
selected=false;
while ~selected
    drawnow
    %disp(char(btn.String));
    if char(btn.String)=='S'
        selected=true;
    end
end
delete(btn)
delete(txt)
end
function Insert1(d)
txt(1) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 150 600 500],...
    'FontSize',16,...
    'String','Guided Run: Insertion Sort');
txt(2) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 0 600 600],...
    'FontSize',14,...
    'String',{'Logic Behind:','',...
    'Start from the 2nd item and compare it to first. Swap if the second item is smaller.' ,'',...
    'Pick the next item (3rd) and compare with the previous one. ' ,'',...
    'Swap until the element on left is smaller. ' ,'',...
    'This will let you pick each item and insert it into the appropriate spot by sliding it to the left.' ,'',...
    'Repeat until you reach the end of the list. '});
btn = uicontrol('Parent',d,...
    'Position',[550 50 200 50],...
    'String','NEXT -->',...
    'FontSize',16,...
    'Callback',@btn_callback);
drawnow
selected=false;
while ~selected
    drawnow
    %disp(char(btn.String));
    if char(btn.String)=='S'
        selected=true;
    end
end
delete(btn)
delete(txt)
end
function Insert2(d)
txt(1) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 150 600 500],...
    'FontSize',16,...
    'String','Guided Run: Insertion Sort');
txt(2) = uicontrol('Parent',d,...
    'Style','text',...
    'HorizontalAlignment','left',...
    'Position',[50 0 600 600],...
    'FontSize',14,...
    'String',{'Your Duty:','',...
    'Compare their stiffness by pushing the handle against them.','',...
    'Swap if the one on right is more compliant to move smaller item to the left, keep otherwise.','',...
    'In other words, push the handle towards the softer spring in the decision phase.','',...
    'Observe order of comparisons.'});
btn = uicontrol('Parent',d,...
    'Position',[550 50 200 50],...
    'String','NEXT -->',...
    'FontSize',16,...
    'Callback',@btn_callback);
drawnow
selected=false;
while ~selected
    drawnow
    %disp(char(btn.String));
    if char(btn.String)=='S'
        selected=true;
    end
end
delete(btn)
delete(txt)
end
function btn_callback(source,event)
source.String='S';
end
